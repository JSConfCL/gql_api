/* eslint-disable */
/* @ts-nocheck */
/* prettier-ignore */
/* This file is automatically generated using `npm run graphql:types` */
import type * as Types from '../../generated/types';

import type { JsonObject } from "type-fest";
import gql from 'graphql-tag';
export type CreateSalaryMutationVariables = Types.Exact<{
  input: Types.CreateSalaryInput;
}>;


export type CreateSalaryMutation = { __typename?: 'Mutation', createSalary: { __typename?: 'Salary', id: string, amount: number, yearsOfExperience: number, countryCode: string, gender: Types.Gender | null, genderOtherText: string | null, typeOfEmployment: Types.TypeOfEmployment, workMetodology: Types.WorkMetodology, currency: { __typename?: 'AllowedCurrency', id: string, currency: string }, workRole: { __typename?: 'WorkRole', id: string, name: string } } };

export type UpdateSalaryMutationVariables = Types.Exact<{
  input: Types.UpdateSalaryInput;
}>;


export type UpdateSalaryMutation = { __typename?: 'Mutation', updateSalary: { __typename?: 'Salary', id: string, amount: number, yearsOfExperience: number, countryCode: string, gender: Types.Gender | null, genderOtherText: string | null, typeOfEmployment: Types.TypeOfEmployment, workMetodology: Types.WorkMetodology, currency: { __typename?: 'AllowedCurrency', id: string, currency: string }, workRole: { __typename?: 'WorkRole', id: string, name: string } } };


export const CreateSalary = gql`
    mutation CreateSalary($input: CreateSalaryInput!) {
  createSalary(input: $input) {
    id
    amount
    currency {
      id
      currency
    }
    yearsOfExperience
    countryCode
    gender
    genderOtherText
    typeOfEmployment
    workRole {
      id
      name
    }
    workMetodology
  }
}
    `;
export const UpdateSalary = gql`
    mutation UpdateSalary($input: UpdateSalaryInput!) {
  updateSalary(input: $input) {
    id
    amount
    currency {
      id
      currency
    }
    yearsOfExperience
    countryCode
    gender
    genderOtherText
    typeOfEmployment
    workRole {
      id
      name
    }
    workMetodology
  }
}
    `;