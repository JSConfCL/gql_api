/* eslint-disable */
/* @ts-nocheck */
/* prettier-ignore */
/* This file is automatically generated using `npm run graphql:types` */
import type * as Types from '../../generated/types';

import type { JsonObject } from "type-fest";
import gql from 'graphql-tag';
export type UpdateCompanyMutationVariables = Types.Exact<{
  input: Types.UpdateCompanyInput;
}>;


export type UpdateCompanyMutation = { __typename?: 'Mutation', updateCompany: { __typename?: 'Company', id: string, name: string | null, description: string | null, logo: string | null, website: string | null, status: Types.CompanyStatus | null, domain: string, hasBeenUpdated: boolean, salarySubmissions: number } };

export type CreateCompanyMutationVariables = Types.Exact<{
  input: Types.CreateCompanyInput;
}>;


export type CreateCompanyMutation = { __typename?: 'Mutation', createCompany: { __typename?: 'Company', id: string, name: string | null, description: string | null, logo: string | null, website: string | null, status: Types.CompanyStatus | null, domain: string, hasBeenUpdated: boolean, salarySubmissions: number } };


export const UpdateCompany = gql`
    mutation UpdateCompany($input: UpdateCompanyInput!) {
  updateCompany(input: $input) {
    id
    name
    description
    logo
    website
    status
    domain
    hasBeenUpdated
    salarySubmissions
  }
}
    `;
export const CreateCompany = gql`
    mutation CreateCompany($input: CreateCompanyInput!) {
  createCompany(input: $input) {
    id
    name
    description
    logo
    website
    status
    domain
    hasBeenUpdated
    salarySubmissions
  }
}
    `;