/* eslint-disable */
/* @ts-nocheck */
/* prettier-ignore */
/* This file is automatically generated using `npm run graphql:types` */
import type * as Types from '../../../generated/types';

import type { JsonObject } from "type-fest";
import gql from 'graphql-tag';
export type UserSearchQueryVariables = Types.Exact<{
  input: Types.PaginatedInputUserSearchValues;
}>;


export type UserSearchQuery = { __typename?: 'Query', userSearch: { __typename?: 'PaginatedUser', data: Array<{ __typename?: 'User', id: string, name: string | null, lastName: string | null, bio: string | null, username: string }> } };


export const UserSearch = gql`
    query UserSearch($input: PaginatedInputUserSearchValues!) {
  userSearch(input: $input) {
    data {
      id
      name
      lastName
      bio
      username
    }
  }
}
    `;