/* eslint-disable */
/* @ts-nocheck */
/* prettier-ignore */
/* This file is automatically generated using `npm run graphql:types` */
import type * as Types from '../../../generated/types';

import type { JsonObject } from "type-fest";
import gql from 'graphql-tag';
export type ClaimUserTicketAddonsMutationVariables = Types.Exact<{
  addonsClaims: Array<Types.ClaimUserTicketAddonInput> | Types.ClaimUserTicketAddonInput;
  currencyId: Types.InputMaybe<Types.Scalars['String']['input']>;
}>;


export type ClaimUserTicketAddonsMutation = { __typename?: 'Mutation', claimUserTicketAddons: { __typename: 'PurchaseOrder', id: string, status: Types.PurchaseOrderStatusEnum | null, purchasePaymentStatus: Types.PurchaseOrderPaymentStatusEnum | null, paymentLink: string | null, userTicketAddons: Array<{ __typename?: 'UserTicketAddon', id: string, userTicketId: string, addonId: string, quantity: number }> } | { __typename: 'RedeemUserTicketAddonsError', error: boolean, errorMessage: string } };


export const ClaimUserTicketAddons = gql`
    mutation ClaimUserTicketAddons($addonsClaims: [ClaimUserTicketAddonInput!]!, $currencyId: String) {
  claimUserTicketAddons(addonsClaims: $addonsClaims, currencyId: $currencyId) {
    __typename
    ... on PurchaseOrder {
      id
      status
      purchasePaymentStatus
      paymentLink
      userTicketAddons {
        id
        userTicketId
        addonId
        quantity
      }
    }
    ... on RedeemUserTicketAddonsError {
      error
      errorMessage
    }
  }
}
    `;