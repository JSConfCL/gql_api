/* eslint-disable */
/* @ts-nocheck */
/* prettier-ignore */
/* This file is automatically generated using `npm run graphql:types` */
import type * as Types from '../../../generated/types';

import type { JsonObject } from "type-fest";
import gql from 'graphql-tag';
export type ApplyToWaitlistMutationVariables = Types.Exact<{
  ticketId: Types.Scalars['String']['input'];
}>;


export type ApplyToWaitlistMutation = { __typename?: 'Mutation', applyToWaitlist: { __typename?: 'UserTicket', id: string, redemptionStatus: Types.TicketRedemptionStatus, approvalStatus: Types.TicketApprovalStatus, ticketTemplate: { __typename?: 'Ticket', id: string, event: { __typename?: 'Event', id: string } }, user: { __typename?: 'User', id: string } | null } };


export const ApplyToWaitlist = gql`
    mutation ApplyToWaitlist($ticketId: String!) {
  applyToWaitlist(ticketId: $ticketId) {
    id
    redemptionStatus
    approvalStatus
    ticketTemplate {
      id
      event {
        id
      }
    }
    user {
      id
    }
  }
}
    `;