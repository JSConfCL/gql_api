/* eslint-disable */
/* @ts-nocheck */
/* prettier-ignore */
/* This file is automatically generated using `npm run graphql:types` */
import type * as Types from '../../../../generated/types';

import type { JsonObject } from "type-fest";
import gql from 'graphql-tag';
export type GiftMyTicketToUserMutationVariables = Types.Exact<{
  ticketId: Types.Scalars['String']['input'];
  input: Types.GiftInfoInput;
}>;


export type GiftMyTicketToUserMutation = { __typename?: 'Mutation', giftMyTicketToUser: { __typename?: 'UserTicketGift', id: string, status: Types.GiftAttemptStatus, expirationDate: string, giftMessage: string | null, gifter: { __typename?: 'GiftTicketUserInfo', email: string, name: string | null }, recipient: { __typename?: 'GiftTicketUserInfo', email: string, name: string | null }, userTicket: { __typename?: 'UserTicket', id: string, approvalStatus: Types.TicketApprovalStatus } } };


export const GiftMyTicketToUser = gql`
    mutation GiftMyTicketToUser($ticketId: String!, $input: GiftInfoInput!) {
  giftMyTicketToUser(ticketId: $ticketId, input: $input) {
    id
    status
    expirationDate
    giftMessage
    gifter {
      email
      name
    }
    recipient {
      email
      name
    }
    userTicket {
      id
      approvalStatus
    }
  }
}
    `;