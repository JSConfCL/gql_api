/* eslint-disable */
/* @ts-nocheck */
/* prettier-ignore */
/* This file is automatically generated using `npm run graphql:types` */
import type * as Types from '../../../../generated/types';

import type { JsonObject } from "type-fest";
import gql from 'graphql-tag';
export type ClaimUserTicketMutationVariables = Types.Exact<{
  input: Types.TicketClaimInput;
}>;


export type ClaimUserTicketMutation = { __typename?: 'Mutation', claimUserTicket: { __typename: 'PurchaseOrder', id: string, tickets: Array<{ __typename?: 'UserTicket', id: string, paymentStatus: Types.PurchaseOrderPaymentStatusEnum | null, approvalStatus: Types.TicketApprovalStatus, redemptionStatus: Types.TicketRedemptionStatus, giftAttempts: Array<{ __typename?: 'UserTicketGift', id: string, gifter: { __typename?: 'GiftTicketUserInfo', email: string, name: string | null }, recipient: { __typename?: 'GiftTicketUserInfo', email: string, name: string | null } }> }> } | { __typename: 'RedeemUserTicketError', errorMessage: string } };


export const ClaimUserTicket = gql`
    mutation ClaimUserTicket($input: TicketClaimInput!) {
  claimUserTicket(input: $input) {
    __typename
    ... on PurchaseOrder {
      id
      tickets {
        id
        paymentStatus
        approvalStatus
        redemptionStatus
        giftAttempts {
          id
          gifter {
            email
            name
          }
          recipient {
            email
            name
          }
        }
      }
    }
    ... on RedeemUserTicketError {
      __typename
      errorMessage
    }
  }
}
    `;