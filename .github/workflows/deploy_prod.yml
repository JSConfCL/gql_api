name: Deploy to PROD

on:
  workflow_run:
    # Esto tiene q hacer match con los nombres de los workflows de tests
    workflows: ["Graphql and Database Tests", "Lint and Typecheck"]
    branches: [release]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Deploy to Cloudflare Workers PRODUCTION
    runs-on: ubuntu-latest
    steps:
      - name: ‚è≥ Cloning repo
        uses: actions/checkout@v3
      - name: ‚¨¢ Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: üì¶ Download Cached Package Dependencies
        uses: actions/cache@v3
        env:
          cache-name: NPM
        with:
          path: ~/.npm
          key: CACHE-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
      - name: üì• Install dependencies
        run: npm ci --prefer-offline --no-audit --legacy-peer-deps --cache ~/.npm
      # Deploy the API
      - name: üõ≥Ô∏è DEPLOY API WORKER
        run: CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_WORKERS_JSCONF_DEV_DEPLOY }} npx wrangler deploy --env=production

      - name: üõ≥Ô∏è DEPLOY AUTH-TOKEN WORKER
        run: CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_WORKERS_JSCONF_DEV_DEPLOY }} npx wrangler deploy --env=production --config ./workers/auth_tokens/wrangler.toml
      # Redeploy the EMAIL queue consumer
      - name: üíÄ/üõ≥Ô∏è RE-DEPLOY queue consumer
        run: |
          CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_WORKERS_JSCONF_DEV_DEPLOY }} npx wrangler queues consumer remove mail-queue-production mail-queue-consumer-production && \
          CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_WORKERS_JSCONF_DEV_DEPLOY }} npx wrangler deploy --env=production --config ./workers/email_queue/wrangler.toml
      # Redeploy the Google Import consumer
      - name: üíÄ/üõ≥Ô∏è RE-DEPLOY GOOGLE-IMPORT queue consumer
        run: |
          CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_WORKERS_JSCONF_DEV_DEPLOY }} npx wrangler queues consumer remove google-photos-import-queue-production google-import-queue-consumer-production && \
          CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_WORKERS_JSCONF_DEV_DEPLOY }} npx wrangler deploy --config ./workers/google_import_queue_consumer/wrangler.toml
